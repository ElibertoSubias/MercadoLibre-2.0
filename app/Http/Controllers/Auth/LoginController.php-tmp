<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use App\User;
use Auth;
use Illuminate\Http\Request;

use Redirect;

class LoginController extends Controller {
	//Aplicando middleware solo para el metodo showLoginForm
	//Asi que solo podemos entrar al login si estamos NO autenticados
	public function __construct() {
		$this->middleware('guest', ['only' => 'showLoginForm']);
	}

	public function showLoginForm(Request $request) {
		if (User::where('email', '=', $request->login)->exists() || User::where('alias', '=', $request->login)->exists()) {
			return view('auth.validarPassword')->with('login', $request->login);
		} else {
			return back();
		}
	}

	public function login(Request $request) {
		if ($request->password) {
			$this->validate($request, [
					'login'    => 'required|string',
					'password' => 'required|string'
				]);

			$login_type = filter_var($request->login, FILTER_VALIDATE_EMAIL)?'email':'alias';

			$request->merge([$login_type => $request->login]);

			if (Auth::attempt($request->only($login_type, 'password'))) {
				return redirect()        ->route('dashboard');
			}
			return view('auth.validarPassword')->with('login', $request->login);
		}
		return view('auth.validarPassword')->with('login', $request->login);

	}

	public function logout() {
		Auth::logout();
		return redirect('/');
	}

	public function username() {
		return 'alias';
	}
}
