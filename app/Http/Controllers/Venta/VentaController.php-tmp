<?php

namespace App\Http\Controllers\Venta;

use App\Articulos;

use App\Http\Controllers\Controller;
use App\Urlimagenes;
use Auth;
use Illuminate\Http\Request;

use Redirect;
use Validator;

class VentaController extends Controller {
	/**
	 * Display a listing of the resource.
	 *
	 * @return \Illuminate\Http\Response
	 */
	public function index() {
		//
	}

	public function showPrecio(Request $request) {
		return view('vender.precio')->with('objectArticulo', $request);
	}

	public function showConfirmar(Request $request) {
		return view('vender.confirmar')->with('objectArticulo', $request);
	}
	/**
	 * Show the form for creating a new resource.
	 *
	 * @return \Illuminate\Http\Response
	 */
	public function create(Request $request) {
		session_start();
		unset($_SESSION['idPublicacion']);
		$user = Auth::user();

		$id                              = Auth::id();
		$urlPrincipal                    = Urlimagenes::where('idPublicacion', '=', $request->idPublicacion)->first();
		$Articulos                       = new Articulos;
		$Articulos->idUser               = $id;
		$Articulos->titulo               = $request->titulo;
		$Articulos->precio               = floatval($request->precio);
		$Articulos->moneda               = $request->moneda;
		$Articulos->tipoPublicacion      = $request->listingTypes;
		$Articulos->estado               = $request->estado;
		$Articulos->municipio            = $request->municipio;
		$Articulos->colonia              = $request->colonia;
		$Articulos->telefono             = $request->telefono;
		$Articulos->categoria            = $request->categoria;
		$Articulos->modelo               = $request->modelo;
		$Articulos->marca                = $request->marca;
		$Articulos->anio                 = $request->anio;
		$Articulos->urlvideo             = $request->videoURL;
		$Articulos->numPuertas           = $request->numPuertas;
		$Articulos->kilometros           = $request->kilometros;
		$Articulos->idPublicacion        = $request->idPublicacion;
		$Articulos->descripcion          = $request->descripcion;
		$Articulos->horarioContacto      = $request->horarioContacto;
		$Articulos->color                = $request->color;
		$Articulos->tipoCombustible      = $request->tipoCombustible;
		$Articulos->motor                = $request->motor;
		$Articulos->direccionAuto        = $request->direccionAuto;
		$Articulos->transmicion          = $request->transmicion;
		$Articulos->version              = $request->version;
		$Articulos->urlPrincipal         = $urlPrincipal->url;
		$Articulos->estadoPublicacion    = 1;
		$Articulos->arrayCaracteristicas = $request->arrayCaracteristicas;
		$Articulos->urlPrincipal         = $urlPrincipal->url;
		$Articulos->save();
		return Redirect::route('estado', ['idPublicacion' => $request->idPublicacion, 'user' => $user]);
	}

	public function showEstado(Request $request) {
		//Cambiar de idImg a idPublicacion

		$datos  = Articulos::where('idPublicacion', '=', $request->idPublicacion)->first();
		$imagen = Urlimagenes::where('idPublicacion', '=', $request->idPublicacion)->first();
		return view('vender.estadopublicacion')->with("datos", $datos)->with("imagen", $imagen);
	}

	public function showPublicacion(Request $request) {
		$user   = Auth::user();
		$idUser = $request->user;

		$datos = Articulos::where(['_id' => $request->id, 'idUser' => $idUser])->first();
		if ($datos != "") {
			$imagen = Urlimagenes::where('idPublicacion', '=', $datos->idPublicacion)->first();
			return view('vender.verPublicacion')->with('datos', $datos)->with('imagen', $imagen);
		} else {
			return view('dashboard');
		}

	}

	public function actualizarCorreo(Request $request) {
		//
	}
	/**
	 * Store a newly created resource in storage.
	 *
	 * @param  \Illuminate\Http\Request  $request
	 * @return \Illuminate\Http\Response
	 */
	public function store(Request $request) {
		$validation = Validator::make($request->all(), [
				'select_file' => 'required|image|mimes:jpeg,png,jpg,gif|max:2048'
			]);
		if ($validation->passes()) {
			$image    = $request->file('select_file');
			$new_name = $request->idImg.'.'.$image->getClientOriginalExtension();
			$dir      = 'images/'.$request->idUser.'/'.$request->idPublicacion.'/'.$new_name;
			if (file_exists($dir))//verifica que el archivo existe
			{
				unlink($dir);// si es true, llama la funciÃ³n
			}
			$image->move(public_path('images/'.$request->idUser.'/'.$request->idPublicacion.'/'), $new_name);
			//Almacenamiento de la URL de la imagen agregada
			if (!Urlimagenes::where(['idPublicacion' => $request->idPublicacion, 'tipoImg' => $request->idImg])->exists()) {
				$Imagen                = new Urlimagenes;
				$Imagen->idPublicacion = $request->idPublicacion;
				$Imagen->url           = $new_name;
				$Imagen->tipoImg       = $request->idImg;
				$Imagen->save();
			} else {
				$datos = Urlimagenes::where(['idPublicacion' => $request->idPublicacion, 'tipoImg' => $request->idImg])->update(['url' => $new_name]);
			}

			return response()->json([
					'message'        => 'Image Upload Successfully',
					'uploaded_image' => '<img src="../public/images/'.$request->idUser.'/'.$request->idPublicacion.'/'.$new_name.'" class="img-thumbnail" width="300" />',
					'class_name'     => 'alert-success',
					'url'            => $new_name
				]);
		} else {
			return response()->json([
					'message'        => $validation->errors()->all(),
					'uploaded_image' => '',
					'class_name'     => 'alert-danger'
				]);
		}
	}

	/**
	 * Display the specified resource.
	 *
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function showModificarVEHI(Request $request) {
		$user = Auth::user();

		$datos = Articulos::where(['_id' => $request->itemId, 'idUser' => $user->_id])->first();
		if ($datos != "") {
			$imagen = Urlimagenes::where('idPublicacion', '=', $datos->idPublicacion)->get();
			return view('vender.modificarVEHI')->with('datos', $datos)->with('imagen', $imagen);

		} else {
			return "0";
		}
	}

	public function delateImagen(Request $request) {
		if ($request->ajax()) {
			if (!unlink($request->link)) {
				echo ("$link No fue posible eliminar la imagen");
			} else {
				$datos = Urlimagenes::where('_id', $request->idImg)->update(['url' => '']);
				if ($request      ->tipo == "principal") {
					return response()->json([
							'contenido' => '<p class="picture-uploader-add">Agregar</p><div class="picture-uploader-controls"><p role="button" class="ch-close ch-hide"><span class="ch-hide">x</span></p> </div><p class="picture-uploader-principal">Foto principal</p>'
						]);
				}
				return response()->json([
						'contenido' => '<p class="picture-uploader-add">Agregar</p><div class="picture-uploader-controls"><p role="button" class="ch-close ch-hide"><span class="ch-hide">x</span></p></div>'
					]);
			}
		}
	}

	public function updateVEHI(Request $request) {
		$datos = Articulos::where('_id', $request->idItem)->update([
				'titulo'               => $request->titulo,
				'precio'               => $request->precio,
				'moneda'               => $request->moneda,
				'estado'               => $request->estado,
				'municipio'            => $request->municipio,
				'colonia'              => $request->colonia,
				'telefono'             => $request->telefono,
				'modelo'               => $request->modelo,
				'marca'                => $request->marca,
				'anio'                 => $request->anio,
				'urlvideo'             => $request->urlvideo,
				'numPuertas'           => $request->numPuertas,
				'kilometros'           => $request->kilometros,
				'descripcion'          => $request->descripcion,
				'horarioContacto'      => $request->horarioContacto,
				'color'                => $request->color,
				'tipoCombustible'      => $request->tipoCombustible,
				'motor'                => $request->motor,
				'direccionAuto'        => $request->direccionAuto,
				'transmicion'          => $request->transmicion,
				'version'              => $request->version,
				'urlPrincipal'         => $request->urlPrincipal,
				'arrayCaracteristicas' => $request->arrayCaracteristicas
			]);
		return Redirect::route('publicaciones');
	}
	/**
	 * Show the form for editing the specified resource.
	 *
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function edit($id) {
		//
	}

	/**
	 * Update the specified resource in storage.
	 *
	 * @param  \Illuminate\Http\Request  $request
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function update(Request $request, $id) {
		//
	}

	/**
	 * Remove the specified resource from storage.
	 *
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function destroy($id) {
		//
	}
}
